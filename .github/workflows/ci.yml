name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_USER: testuser
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint --if-present
      
      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          PGUSER: testuser
          PGPASSWORD: testpassword
          PGHOST: localhost
          PGDATABASE: testdb
          PGPORT: 5432
          JWT_SECRET: test_secret_key_for_testing_only_minimum_32_characters
          NODE_ENV: test
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: success()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage
          fail_ci_if_error: false
      
      - name: Build
        run: npm run build --if-present

  integration-tests:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_USER: testuser
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U testuser; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
      
      - name: Initialize test database
        run: node services/init-db.js
        env:
          PGUSER: testuser
          PGPASSWORD: testpassword
          PGHOST: localhost
          PGDATABASE: testdb
          PGPORT: 5432
          NODE_ENV: test
      
      - name: Run integration tests
        run: npm run test:coverage -- --testNamePattern="Integration"
        env:
          PGUSER: testuser
          PGPASSWORD: testpassword
          PGHOST: localhost
          PGDATABASE: testdb
          PGPORT: 5432
          JWT_SECRET: test_secret_key_for_testing_only_minimum_32_characters
          NODE_ENV: test

  security:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
